name: Markdown quality check

on:
  pull_request:
    branches:
      - development
    paths:
      - '_posts/**/*.md' # Trigger only when Markdown files in _posts are changed

jobs:
  markdown-linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: _posts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Markdown Linting
        uses: avto-dev/markdown-lint@v1
        with:
          config: '.markdownlint.json'

  markdown-link-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: _posts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Markdown Link Check
        uses: gaurav-nelson/github-action-markdown-link-check@v1

  markdown-header-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: _posts
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Markdown File Headers
        run: |
          function check_markdown_header {
              local file=$1
              local missing_component=false

              local components=(
                  "^---$"
                  "^title:.*"
                  "^published:.*"
                  "^description:.*"
                  "^tags:.*"
                  "^cover_image:.*"
                  "^canonical_url:.*"
                  "^id:.*"
                  "^---$"
              )

              echo "Checking file: $file"
              for component in "${components[@]}"; do
                  if ! grep -Pq "$component" "$file"; then
                      echo "[❌] $file - Missing header component: $component"
                      missing_component=true
                  fi
              done

              if [ "$missing_component" = true ]; then
                  return 1
              else
                  echo "[✔] $file - All header components present"
                  return 0
              fi
          }

          IFS=$'\n'
          error=0
          total_files=0
          ls -la
          # Loop over all Markdown files in the current directory
          for file in *.md; do
              check_markdown_header "$file" || error=$((error+1))
              total_files=$((total_files+1))
          done

          echo "$total_files file(s) checked."
          if [ $error -ne 0 ]; then
              echo "There are files without the required header format."
              exit 1
          else
              echo "All Markdown files have the required header format."
          fi
        shell: bash

#   spell-check:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: _posts
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
      
#       - name: Spell Check
#         uses: rojopolis/spellcheck-github-actions@0.16.0
#         with:
#           markdown_files_only: true
#           ignore_file: '.spellignore'

